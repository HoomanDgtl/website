---
import type { CollectionEntry } from "astro:content";
import clsx from "clsx";

type Props = {
  roadmap: CollectionEntry<"aeps">;
  year: number;
  className?: string;
};

const { roadmap, year, className } = Astro.props;
const estimatedCompletion =
  roadmap?.data?.["estimated-completion"]?.toLocaleDateString();
const completionDate = roadmap?.data?.completed?.toLocaleDateString();

const firstParagraph = roadmap?.body
  ?.split("\n")
  .find(
    (line) => line.trim() && !line.startsWith("#") && !line.startsWith("---"),
  )
  ?.replace(/\[([^\]]+)\]\([^)]+\)/g, "$1");
---

<a
  href={`/roadmap/${year}/${roadmap?.slug?.split("/")?.[0]}`}
  class={clsx(
    "flex flex-col gap-4 rounded-lg border bg-background p-6 shadow ml-5 md:ml-0 hover:shadow-md transition-all duration-300",
    className
      ? className
      : roadmap.data.roadmap === "major"
        ? "md:w-[70%]"
        : "md:w-[40%]",
  )}
>
  <div class="flex items-start justify-between gap-2">
    <h3
      class={clsx(
        roadmap?.data?.roadmap === "major" || className
          ? "font-instrument text-4xl md:text-5xl"
          : "text-lg font-semibold",
      )}
    >
      {roadmap?.data?.title}
    </h3>
    <p
      class="whitespace-nowrap rounded-full bg-badgeColor px-2 py-1 text-xs font-medium text-foreground"
    >
      {roadmap?.data?.status}
    </p>
  </div>
  {
    estimatedCompletion && (
      <p class="text-sm">Estimated Completion: {estimatedCompletion}</p>
    )
  }
  {completionDate && <p class="text-sm">Completion Date: {completionDate}</p>}
  <div class="my-1 h-px w-full border-b"></div>
  <p
    class={clsx(
      "text-sm",
      roadmap.data.roadmap === "major" ? "line-clamp-1" : "line-clamp-2",
    )}
    set:html={firstParagraph}
  />
</a>
