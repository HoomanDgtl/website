---
import RoadmapCard from "@/components/roadmap-card.astro";
import ButtonLink from "@/components/ui/button-link.astro";
import TopMargin from "@/components/ui/top-margin.astro";
import Layout from "@/layouts/layout.astro";
import { getCollection } from "astro:content";
import { ChevronRight } from "lucide-react";
export async function getStaticPaths() {
  const roadmaps = await getCollection("aeps");
  const sortedRoadmaps = roadmaps.sort(
    (a, b) =>
      new Date(a.data.created).getTime() - new Date(b.data.created).getTime(),
  );
  return sortedRoadmaps.map((roadmap) => {
    const year = new Date(roadmap.data.created).getFullYear();
    const nextRoadmap = sortedRoadmaps.find(
      (r) => new Date(r.data.created) > new Date(roadmap.data.created),
    );

    return {
      params: {
        year,
        slug: roadmap.slug?.split("/")[0],
      },
      props: { roadmap, nextRoadmap },
    };
  });
}

const { roadmap, nextRoadmap } = Astro.props;
const { Content } = await roadmap.render();
const year = Astro.params.year;

const quarter = Math.floor(new Date(roadmap.data.created).getMonth() / 3) + 1;

interface AuthorLink {
  fullName: string;
  username: string;
}

const parseAuthors = (authorString: string): AuthorLink[] => {
  const authorParts = authorString.trim().split(/[\s\n]+/);

  const authors: AuthorLink[] = [];
  let currentAuthor: string[] = [];

  authorParts.forEach((part) => {
    if (part.startsWith("(") || part.startsWith("@")) {
      const username = part.replace(/[()@]/g, "");
      if (currentAuthor.length > 0) {
        authors.push({
          fullName: currentAuthor.join(" "),
          username: username,
        });
        currentAuthor = [];
      }
    } else {
      currentAuthor.push(part);
    }
  });

  return authors;
};

const parsedAuthors = parseAuthors(roadmap.data.author)
  .map((author) => {
    return `<a href="https://github.com/${author.username}" class="text-foreground underline" target="_blank">${author.fullName}</a><br/>`;
  })
  .join(" ");
---

<Layout title={roadmap.data.title}>
  <TopMargin readable className="flex flex-col gap-16">
    <div class="flex items-center gap-3 text-para">
      <a href={`/roadmap/${year}`}>Akash Network Roadmap</a>
      <ChevronRight size={16} />
      <a href={`/roadmap/${year}`}>Q{quarter}</a>
      <ChevronRight size={16} />
      <p class="text-foreground">{roadmap.slug.split("/")[0]}</p>
    </div>
    <div class="flex gap-14 rounded-lg border p-8">
      <div class="mb-8 flex w-full flex-1 flex-col gap-6">
        <div class="flex items-center justify-between gap-2">
          <h1 class="text-[40px] font-bold">{roadmap.data.title}</h1>
          <p
            class="rounded-full bg-badgeColor px-2 py-1 text-xs font-medium text-foreground"
          >
            {roadmap.data.status}
          </p>
        </div>
        <div class="h-px w-full border-b"></div>
        <article class="prose max-w-none">
          <Content />
        </article>
      </div>
      <div class="flex w-[25%] flex-col gap-4">
        <div class="flex flex-col gap-1 text-sm">
          <p>
            Estimated completion: {
              roadmap.data["estimated-completion"].toLocaleDateString()
            }
          </p>
          <p>Created: {roadmap.data.created.toLocaleDateString()}</p>
          <p>Last Updated: {roadmap.data.updated.toLocaleDateString()}</p>
        </div>
        <div class="h-px w-full border-b"></div>
        <div class="flex flex-col gap-1 text-sm">
          <p>Category: {roadmap.data.category}</p>
          <p>Status: {roadmap.data.status}</p>
          <p>Type: {roadmap.data.roadmap}</p>
        </div>

        <div class="h-px w-full border-b"></div>
        <div class="flex flex-col gap-1 text-sm">
          <p class="font-medium">Authors:</p>
          <p set:html={parsedAuthors} />
        </div>

        <div class="h-px w-full border-b"></div>

        <div class="space-y-1 text-sm">
          <p>
            <span class="font-medium">Discussion on Github:</span>
            <a
              href={roadmap.data["discussions-to"]}
              target="_blank"
              class="ml-2 text-primary hover:underline"
            >
              Link
            </a>
          </p>
          <p>
            <span class="font-medium">Resolution:</span>
            <a
              href={roadmap.data.resolution}
              target="_blank"
              class="ml-2 text-primary hover:underline"
            >
              Link
            </a>
          </p>
        </div>
        <div class="h-px w-full border-b"></div>
        <ButtonLink
          link={`https://github.com/akash-network/website-revamp/tree/main/src/content/Roadmap/${roadmap.slug}/index.md`}
          variant="secondary"
        >
          Edit on GitHub
        </ButtonLink>
      </div>
    </div>
    <div class="mx-auto flex w-[80%] flex-col gap-4">
      <p class="text-sm font-medium text-foreground">View next aep</p>
      <RoadmapCard roadmap={nextRoadmap} year={year} className="w-full" />
    </div>
  </TopMargin>
</Layout>
