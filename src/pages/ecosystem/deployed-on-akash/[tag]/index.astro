---
import EcosystemPage from "@/components/ecosystem-pages/ecosystem-page.astro";
import { getPriorityIndex } from "@/utils/sequences/deployedOnAkash";
import { getCollection, type CollectionEntry } from "astro:content";
type Project = CollectionEntry<"Ecosystem_Page">;

export async function getStaticPaths() {
  const projects = (await getCollection("Ecosystem_Page"))
    .filter((project) => project.data.category === "deployed_on_akash")
    .sort((a, b) => {
      const dateA = new Date(a.data.pubDate);
      const dateB = new Date(b.data.pubDate);
      return (
        dateB.getTime() - dateA.getTime() &&
        getPriorityIndex(a.data.projectTitle) -
          getPriorityIndex(b.data.projectTitle)
      );
    });

  const tags: string[] = [];

  projects.forEach((project) => {
    project.data.tags.forEach((tag: string) => {
      const lowerCasedTag = tag.toLowerCase();
      if (!tags.includes(lowerCasedTag)) {
        tags.push(lowerCasedTag);
      }
    });
  });

  return tags.flatMap((tag) => {
    const lowercasedTag = tag.toLowerCase();
    const filteredPosts = projects.filter((post) =>
      post.data.tags.some((tag: string) => tag.toLowerCase() === lowercasedTag),
    );

    return {
      params: { tag },

      props: { currentTag: tag, tags: tags, page: filteredPosts },
    };
  });
}

const { page, currentTag, tags } = Astro.props;
const astroUrl = Astro.url;
const pathName = astroUrl.pathname.split("/");
const formattedTag = currentTag.charAt(0).toUpperCase() + currentTag.slice(1);
---

<EcosystemPage
  title={currentTag === "ai & ml"
    ? "AI & ML"
    : currentTag.charAt(0).toUpperCase() + currentTag.slice(1)}
  tags={tags}
  projects={page}
/>
