---
import "@/styles/globals.css";

import TailwindIndicator from "@/components/tailwind-indicator.astro";
import BaseHead from "@/components/base-head.astro";
import Header from "@/components/header/header.astro";
import Footer from "@/components/footer/footer.astro";
import { ViewTransitions } from "astro:transitions";
import CTA from "@/components/CTA.astro";
import AsideTailwindClasses from "@/lib/aside/aside-tailwind-classes.astro";

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description, image } = Astro.props;

const isProd = import.meta.env.PROD;
---

<!doctype html>
<html
  lang="en"
  style="scrollbar-gutter: stable;"
  class="scroll-pt-[137px] scroll-smooth"
>
  <head>
    <script
      is:inline
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-LFRGN2J2RV"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-LFRGN2J2RV");
    </script>

    <script is:inline>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-573RDG5H");
    </script>

    <BaseHead title={title} description={description} image={image} />
    <ViewTransitions />
  </head>
  <body class="bg-background">
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-573RDG5H"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >

    <slot />
    <AsideTailwindClasses />

    {!isProd && <TailwindIndicator />}

    <script>
      const getTheme = () => {
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme) return savedTheme;

        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const setTheme = (theme: string) => {
        if (theme === "light") {
          document.documentElement.classList.remove("dark");
          document.documentElement.setAttribute("data-theme", "light-plus");
        } else {
          document.documentElement.classList.add("dark");
          document.documentElement.setAttribute("data-theme", "dark-plus");
        }
      };

      window.addEventListener("DOMContentLoaded", () => setTheme(getTheme()));
      document.addEventListener("astro:after-swap", () => setTheme(getTheme()));

      const handleHeaderToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
        document.documentElement.setAttribute(
          "data-theme",
          isDark ? "dark-plus" : "light-plus",
        );
      };

      document
        .querySelectorAll("#header-toggle")
        .forEach((el) => el.addEventListener("click", handleHeaderToggleClick));

      document
        .querySelectorAll("#header-toggle-footer")
        .forEach((el) => el.addEventListener("click", handleHeaderToggleClick));
      document
        .querySelectorAll("#header-toggle-nav")
        .forEach((el) => el.addEventListener("click", handleHeaderToggleClick));
    </script>
  </body>
</html>
