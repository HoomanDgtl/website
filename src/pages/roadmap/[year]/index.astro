---
import Roadmap from "@/components/roadmap.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
type Roadmap = CollectionEntry<"aeps">;

export async function getStaticPaths() {
  const roadmaps = await getCollection("aeps");

  const years = [
    ...new Set(
      roadmaps.map((roadmap) => new Date(roadmap.data.created).getFullYear()),
    ),
  ].sort((a, b) => a - b);
  console.log(roadmaps);
  return years.map((year) => {
    const yearRoadmaps = roadmaps.filter(
      (roadmap) => new Date(roadmap.data.created).getFullYear() === year,
    );

    const quarters = {
      Q1: [] as Roadmap[],
      Q2: [] as Roadmap[],
      Q3: [] as Roadmap[],
      Q4: [] as Roadmap[],
    };

    yearRoadmaps.forEach((roadmap) => {
      const month = new Date(roadmap.data.created).getMonth();
      if (month <= 2) quarters.Q1.push(roadmap);
      else if (month <= 5) quarters.Q2.push(roadmap);
      else if (month <= 8) quarters.Q3.push(roadmap);
      else quarters.Q4.push(roadmap);
    });

    Object.values(quarters).forEach((quarter) => {
      quarter.sort(
        (a, b) =>
          new Date(a.data.created).getTime() -
          new Date(b.data.created).getTime(),
      );
    });

    return {
      params: { year },
      props: { quarters, years },
    };
  });
}

const { quarters, years } = Astro.props;
const { year } = Astro.params;
---

<Roadmap year={year} quarters={quarters} years={years} />
